plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'web.jw'
version = '0.0.1-SNAPSHOT'


java {

	sourceCompatibility = '17'
}

compileJava {    options.compilerArgs << '-parameters'}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.32'
//	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.32'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok:1.18.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

def project_dir = "$projectDir/src/main/portfolio"
sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}
processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$project_dir"
	inputs.dir "$project_dir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}
task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$project_dir"
	inputs.dir "$project_dir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

tasks.register('copyReactBuildFiles', Copy) {
	dependsOn "buildReact"
	from "$project_dir/build"
	into "$projectDir/src/main/resources/static"
}